{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","BuscaPersonajes.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","BuscaPersonajes","categories","catoegory","ReactDOM","render","document","getElementById"],"mappings":"qLAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAc9C,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKhB,SACE,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBkB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCNdG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACjBC,EADiB,iDAC+BC,UAAUH,GADzC,+DAEJI,MAAMF,GAFF,cAEjBG,EAFiB,gBAGFA,EAAKC,OAHH,uBAGhBC,EAHgB,EAGhBA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATf,kBAahBM,GAbgB,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEtC,OACE,sBAAKc,UAAU,yCAAf,UACC,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHIO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECAX,SAAEA,GAAe,IAAD,EAChBd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH+B,mBACnCC,EADmC,KAC5BC,EAD4B,KAiB1C,OAXAC,qBAAU,WACRxB,EAAQC,GACPwB,MAAK,SAAAC,GACJH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGZ,CAACpB,IAGGqB,EDfwBK,CAAa1B,GAAhCa,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAMpB,OACE,qCACE,oBAAIJ,UAAY,oCAAhB,SAAqDhB,IAEpDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAW,YAAhB,SAEMH,EAAOJ,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,eAEIA,GADCA,EAAIC,aElBVgB,EAAkB,WAAO,IAAD,EAECzC,mBAAS,CAAC,gBAFX,mBAE5B0C,EAF4B,KAEhB3C,EAFgB,KAInC,OACE,qCACE,oDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BAEI2C,EAAWnB,KAAK,SAACoB,GAAD,OACd,cAAC,EAAD,CAEA7B,SAAU6B,GADLA,Y,MCfjBC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.339a2ae1.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const handleInputchange = (e) => {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(inputValue.trim().length > 2){\r\n      setCategories(cats => [inputValue, ...cats]);\r\n      setInputValue('');\r\n    }\r\n\r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n          type='text'\r\n          value={inputValue}\r\n          onChange={handleInputchange}\r\n        />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category)=> {\r\nconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=gxyI49Sy2FKM2zfU6c1TiMuSP41deg2Z`;\r\nconst resp = await fetch(url);\r\nconst {data} = await resp.json();\r\n\r\nconst gifs = data.map( img => {\r\n  return {\r\n    id: img.id,\r\n    title: img.title,\r\n    url: img.images?.downsized_medium.url\r\n  }\r\n})\r\n\r\nreturn gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n  // console.log(id, title, url);\r\n  return (\r\n    <div className='card animate__animated animate__fadeIn'>\r\n     <img src={url} alt={title} ></img>\r\n     <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n  const {data:images, loading} = useFetchGifs(category);\r\n\r\n \r\n\r\n \r\n  //getGifs();\r\n  return (\r\n    <>\r\n      <h3 className = 'animate__animated animate__fadeIn'>{category}</h3>\r\n\r\n      {loading && <p className='animate__animated animate__flash'>Loading</p>}\r\n\r\n      <div className= 'card-grid'>\r\n          {\r\n            images.map((img) => (\r\n              <GifGridItem \r\n              key={img.id}\r\n              {...img}\r\n\r\n              />\r\n            ))\r\n          }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n    .then(imgs => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false\r\n      });\r\n    })\r\n  }, [category]);\r\n\r\n\r\n  return state; // { data:[], loading:true};\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const BuscaPersonajes = () => {\r\n\r\n  const [categories, setCategories] = useState(['Dragon ball'])\r\n\r\n  return (\r\n    <>\r\n      <h2>Busca tu personaje</h2>\r\n      <AddCategory setCategories={setCategories}/>\r\n      <hr />\r\n\r\n\r\n\r\n      <ol>\r\n        {\r\n          categories.map( (catoegory) => (\r\n            <GifGrid\r\n            key={catoegory}\r\n            category={catoegory}\r\n\r\n            />\r\n          ))\r\n         }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BuscaPersonajes } from './BuscaPersonajes';\nimport './index.css';\n\nReactDOM.render(\n    <BuscaPersonajes />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}